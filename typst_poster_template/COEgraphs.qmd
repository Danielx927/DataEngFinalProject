---
title: "COE graphs"
format: html
execute:
  echo: true
  warning: false
  message: false
---

::: {.callout-note collapse="true"}

## 1. Load Necessary Libraries and Read Cleaned CSV File

```{r, echo=TRUE, results='hide'}
#import libraries, and read csv file
#| fig-align: center
#| output: asis

library(tidyverse)
library(lubridate)
library(plotly)

# Load data (make sure file is in your working directory)
coe <- read.csv("data/coe_cleaned.csv")
head(coe)
```
:::

## 2. Data Processing

::: {.callout-tip collapse="true" icon=false title="Step 2.1: Renaming the Columns"}

```{r}
# Clean and Prepare Data
coe_clean <- coe |>
  filter(Category %in% c(
    "Cat A (Cars up to 1600cc and 97kW)", 
    "Cat B (Cars above 1600cc or 97kW)", 
    "Cat C (Goods vehicles and buses)", 
    "Cat D (Motorcycles)",
    "Cat E (Open)")
    ) |>
   mutate(
    Announcement.Date = ymd(Announcement.Date),
    vehicle_class = case_when(
      Category == "Cat E (Open)" ~ "Cat E: Open",
      Category == "Cat D (Motorcycles)" ~ "Cat D: Motorcycles",
      Category == "Cat C (Goods vehicles and buses)" ~ "Cat C: Buses",
      Category == "Cat B (Cars above 1600cc or 97kW)" ~ "Cat B: >1600cc or >130bhp",
      Category == "Cat A (Cars up to 1600cc and 97kW)" ~ "Cat A: ≤1600cc or ≤130bhp",
      TRUE ~ NA_character_
    )
  )

# Color palette
category_colors <- c(
  "Cat A: ≤1600cc or ≤130bhp" = "#1f77b4",
  "Cat B: >1600cc or >130bhp" = "#ff7f0e", 
  "Cat C: Buses" = "#2ca02c",
  "Cat D: Motorcycles" = "#d62728"
)
  
```
:::

::: {.callout-tip collapse="true" icon=false title="Step 2.2: Preparing Premium and Ratio Data"}

```{r}
# Prepare premium data
premium_data <- coe_clean |>
  group_by(Announcement.Date, vehicle_class) |>
  summarise(premium = mean(Quota.Premium, na.rm = TRUE), .groups = "drop") |>
  filter(vehicle_class %in% names(category_colors)) |>
  arrange(Announcement.Date)

# Prepare bid-to-quota ratio
bid_quota_ratio <- coe_clean |>
  group_by(Announcement.Date, vehicle_class) |>
  summarise(
    total_bids = sum(Total.Bids.Received, na.rm = TRUE),
    total_quota = sum(Quota, na.rm = TRUE),
    ratio = total_bids / total_quota,
    .groups = "drop"
  ) |>
  filter(vehicle_class %in% names(category_colors) & vehicle_class != "Cat D: Motorcycles") |>
  mutate(ratio = ifelse(is.finite(ratio), ratio, NA_real_)) |>
  arrange(Announcement.Date)

```
:::

::: {.callout-tip collapse="true" icon=false title="Step 2.3: Interactive Plotly Subplots"}

```{r}
## 1. Premium Line Plot (top)
p1 <- plot_ly()

for (cat in names(category_colors)) {
  cat_data <- premium_data |> filter(vehicle_class == cat)
  p1 <- p1 |>
    add_trace(
      data = cat_data,
      x = ~Announcement.Date,
      y = ~premium,
      type = "scatter",
      mode = "lines",
      name = cat,
      line = list(color = category_colors[cat]),
      hoverinfo = "text",
      text = ~paste0(
        "<b>", vehicle_class, "</b><br>",
        "Date: ", format(Announcement.Date, "%Y-%m"), "<br>",
        "Premium: $", format(round(premium), big.mark = ",")
      )
    )
}

p1 <- p1 |>
  layout(
    xaxis = list(
      title = "<b>Bidding Date</b>",
      showticklabels = TRUE,
      tickangle = -45,
      tickformat = "%b %Y",
      tickformatstops = list(
        list(dtickrange = list(NULL, 2592000000), value = "%b %Y"),
        list(dtickrange = list(2592000000, 31536000000), value = "%b %Y"),
        list(dtickrange = list(31536000000, NULL), value = "%Y")
      )
    ),
    yaxis = list(
      domain = c(0.45, 1),
      title = list(
        text = "<b>COE Premium (SGD)</b>",
        font = list(size = 14),
        standoff = 20
      ),
      tickformat = "$,.0f",
      tickfont = list(size = 12),
      ticks = "outside",
      ticklabelposition = "outside",
      automargin = TRUE
    )
  )

# 2. Bid-to-Quota Ratio Plot (bottom)
p2 <- plot_ly()

for (cat in names(category_colors)) {
  cat_data <- bid_quota_ratio |> filter(vehicle_class == cat)
  
  p2 <- p2 |>
    add_trace(
      data = cat_data,
      x = ~Announcement.Date,
      y = ~ratio,
      type = "scatter",
      mode = "lines",
      name = cat,
      line = list(color = category_colors[cat]),
      hoverinfo = "text",
      text = ~paste0(
        "<b>", vehicle_class, "</b><br>",
        "Date: ", format(Announcement.Date, "%Y-%m"), "<br>",
        "Ratio: ", round(ratio, 2)
      ),
      showlegend = FALSE
    )
}

# Add demand=supply line
p2 <- p2 |>
  add_trace(
    x = ~range(bid_quota_ratio$Announcement.Date),
    y = c(1, 1),
    type = "scatter",
    mode = "lines",
    line = list(dash = "dot", color = "red", width = 2),
    name = "Supply = Demand",
    showlegend = FALSE,
    hoverinfo = "none"
  ) |>
  layout(
    yaxis = list(
      domain = c(0, 0.35),
      title = list(
        text = "<b>Bid-to-Quota Ratio</b>",
        font = list(size = 14),
        standoff = 20
      ),
      range = c(0.5, 3),
      tickformat = ".1f",
      tickfont = list(size = 12),
      ticks = "outside",
      ticklabelposition = "outside",
      automargin = TRUE
    ),
    xaxis = list(
      title = "<b>Bidding Date</b>",
      tickangle = -45,
      rangeslider = list(visible = TRUE),
      tickformatstops = list(
        list(dtickrange = list(NULL, 2592000000), value = "%b %Y"),
        list(dtickrange = list(2592000000, 31536000000), value = "%b %Y"),
        list(dtickrange = list(31536000000, NULL), value = "%Y")
      ),
      tickfont = list(size = 11)
    )
  )

```
:::

::: {.callout-tip collapse="true" icon=false title="Step 2.4: Adding Annotations"}
```{r}
# Shaded event bands
shapes_list <- list(
  list(
    type = "rect",
    xref = "x",         
    yref = "paper", 
    x0 = as.Date("2020-04-07"),
    x1 = as.Date("2020-06-01"),
    y0 = 0,
    y1 = 150000,
    fillcolor = "rgba(255,0,0,0.15)",
    line = list(width = 0),
    layer = "below"
  ),
  list(
    type = "rect",
    xref = "x",         
    yref = "paper",
    x0 = as.Date("2023-05-01"),
    x1 = as.Date("2023-06-01"),
    y0 = 0,
    y1 = 150000,
    fillcolor = "rgba(0,0,255,0.15)",
    line = list(width = 0),
    layer = "below"
  ),
  list(
    type = "rect",
    xref = "x",         
    yref = "paper",
    x0 = as.Date("2013-02-01"),
    x1 = as.Date("2013-04-01"),
    y0 = 0,
    y1 = 150000,
    fillcolor = "rgba(255,165,0,0.15)",
    line = list(width = 0),
    layer = "below"
  )
)

# Annotation text labels for those bands
annotations_list <- list(
  list(
    x = as.Date("2020-05-01"),
    y = 1.07,
    xref = "x",
    yref = "paper",
    text = "<b>COVID-19<br>Circuit Breaker</b>",
    showarrow = FALSE,
    font = list(size = 8, color = "#333"),
    yanchor = "bottom"
  ),
  list(
    x = as.Date("2023-05-15"),
    y = 1.02,
    xref = "x",
    yref = "paper",
    text = "<b>Quota Tightening</b>",
    showarrow = FALSE,
    font = list(size = 8, color = "#333"),
    yanchor = "bottom"
  ),
  list(
    x = as.Date("2013-03-01"),
    y = 1.02,
    xref = "x",
    yref = "paper",
    text = "<b>Loan Curbs</b>",
    showarrow = FALSE,
    font = list(size = 8, color = "#333"),
    yanchor = "bottom"
  )
)
```
:::


::: {.callout-tip collapse="true" icon=false title="Step 2.5: Finalizing the Plot"}
```{r}
# 3. Combine with subplot and add annotations + shaded shapes
fig <- subplot(p1, p2, nrows = 2, shareX = FALSE, titleY = TRUE, heights = c(0.6, 0.4)) |>
  layout(
    title = list(
      text = "<b>COE Premiums and Demand-Supply Ratio Over Time</b>",
      x = 0.05,
      font = list(size = 18)
    ),
    margin = list(l = 80, r = 80, t = 80, b = 100),
    hovermode = "x unified",
    legend = list(
      x = 1.05,
      y = 1,
      orientation = "v"
    ),
    shapes = shapes_list,
    annotations = annotations_list
  ) |>
  config(
    displayModeBar = TRUE,
    responsive = TRUE,
    scrollZoom = TRUE
  )
fig
```
:::